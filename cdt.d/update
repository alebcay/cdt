#!/bin/bash

CURRENT="0.1.5"

doupdate () {
    echo -e "\033[2mDownloading update package"
    curl -L# https://github.com/alebcay/cdt/archive/"$LATEST".zip > /tmp/cdt-update.zip
    pushd /tmp 2>&1 >/dev/null
    unzip -qq cdt-update.zip
    mv cdt-"$LATEST" cdt
    popd 2>&1 >/dev/null
    pushd $(dirname 0) 2>&1 >/dev/null
    pushd .. 2>&1 >/dev/null
    pushd .. 2>&1 >/dev/null
    INSTALLROOT=$(pwd)
    popd 2>&1 >/dev/null
    popd 2>&1 >/dev/null
    echo "Install root is $INSTALLROOT/cdt"
    rsync -a /tmp/cdt $INSTALLROOT
    rm -rf /tmp/cdt
    echo "Processing post-update hooks"
    ([ -e "$INSTALLROOT"/cdt/postupdatehook.sh ] && bash "$INSTALLROOT"/cdt/postupdatehook.sh && rm "$INSTALLROOT"/cdt/postupdatehook.sh) || echo "No update hooks on this release."
    echo -e "\033[0mUpdate finished. You are now using cdt v$LATEST."
}

vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

testvercomp () {
    vercomp $1 $2
    case $? in
        0) op='=';;
        1) op='>';;
        2) op='<';;
    esac
    if [[ $op != $3 ]]
    then
        echo "No updates are available at this time."
        exit
    else
        echo "An update ($LATEST) is available, attempting update"
        doupdate
    fi
}
command -v jq 2>&1 >/dev/null || (echo -e "jq is required to check for updates, installing now" && brew install jq >/dev/null 2>&1)
echo -e "\033[2mChecking latest release"
LATEST=$(curl -s https://api.github.com/repos/alebcay/cdt/releases | jq '.[0]' | jq '.tag_name' | sed "s/^\([\"']\)\(.*\)\1\$/\2/g")
echo -e "Current version is $CURRENT, latest version is $LATEST\033[22;0m"
testvercomp $CURRENT $LATEST '<'
